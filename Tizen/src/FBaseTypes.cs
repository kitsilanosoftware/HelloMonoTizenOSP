//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Tizen
{
    namespace Base
    {
        public enum SortOrder : uint
        {
            /// <summary>A constant for sorting the results in ascending order</summary>
            SORT_ORDER_ASCENDING = 0,
            /// <summary>A constant for sorting the results in descending order</summary>
            SORT_ORDER_DESCENDING = 1,
            /// <summary>A constant for indicating the results are not sorted</summary>
            SORT_ORDER_NONE = 2
        }

        public enum StringMatchCriteria : uint
        {
            /// <summary>A constant for matching the strings exactly</summary>
            STRING_MATCH_CRITERIA_EXACT = 0,
            /// <summary>A constant for matching the strings starting with the specified characters</summary>
            STRING_MATCH_CRITERIA_START_WITH = 1,
            /// <summary>A constant for matching the strings partially</summary>
            STRING_MATCH_CRITERIA_CONTAIN = 2,
            /// <summary>A constant for matching the strings supporting the wildcard characters</summary>
            STRING_MATCH_CRITERIA_WILDCARD = 3
        }

        public enum ComparisonOperator : uint
        {
            /// <summary>A comparison operator that checks the value equality</summary>
            COMPARISON_OP_EQUAL = 0,
            /// <summary>A comparison operator that checks the value inequality</summary>
            COMPARISON_OP_NOT_EQUAL = 1,
            /// <summary>A comparison operator that checks whether a value is greater than the other</summary>
            COMPARISON_OP_GREATER_THAN = 2,
            /// <summary>A comparison operator that checks whether a value is less than the other</summary>
            COMPARISON_OP_LESS_THAN = 3,
            /// <summary>A comparison operator that checks whether a value is greater than or equal to the other</summary>
            COMPARISON_OP_GREATER_THAN_EQUAL_TO = 4,
            /// <summary>A comparison operator that checks whether a value is less than or equal to the other</summary>
            COMPARISON_OP_LESS_THAN_EQUAL_TO = 5,
            /// <summary>A comparison operator that checks whether a value is like the other, where the exact matching condition may vary depending on the definition of each specific API</summary>
            COMPARISON_OP_LIKE = 6,
            /// <summary>A comparison operator that returns true when a value does not exist for the given operand</summary>
            COMPARISON_OP_IS_NULL = 7,
            /// <summary>A comparison operator that returns true when a value exists for the given operand</summary>
            COMPARISON_OP_IS_NOT_NULL = 8
        }
    }
}
